<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_wall</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>selection1=false;
selection2=false;
selectionmap=false;
selectiontime=false;
selectionball=false;
skindisplay_1= instance_create(225,350,obj_skindisplay);
skindisplay_1.skin=1;
skindisplay_2= instance_create(625,350,obj_skindisplay);
skindisplay_2.skin=2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (skin==1)
    image_index=global.skin1-1;
else if (skin==2)
    image_index=global.skin2-1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!selection1)
{
    if (keyboard_check_pressed(global.p1right) or gamepad_button_check_pressed(0 , gp_padr))
    {
        audio_play_sound(menu_sound,0,0);
        global.skin1++;
        if (global.skin1&lt;1) global.skin1=global.skincount;
        else if (global.skin1&gt;global.skincount) global.skin1=1;
    }
    if (keyboard_check_pressed(global.p1left) or gamepad_button_check_pressed(0 , gp_padl))
    {
        audio_play_sound(menu_sound,0,0);
        global.skin1--;
        if (global.skin1&lt;1) global.skin1=global.skincount;
        else if (global.skin1&gt;global.skincount) global.skin1=1;
    }
}
else if(!selectiontime)
{
    if (keyboard_check_pressed(global.p1right) or gamepad_button_check_pressed(0 , gp_padr))
    {
        audio_play_sound(menu_sound,0,0);
        obj_controller.time+=30;
        if (obj_controller.time&lt;60) obj_controller.time=540;
        else if (obj_controller.time&gt;540) obj_controller.time=60;
    }
    if (keyboard_check_pressed(global.p1left) or gamepad_button_check_pressed(0 , gp_padl))
    {
        audio_play_sound(menu_sound,0,0);
        obj_controller.time-=30;
        if (obj_controller.time&lt;60) obj_controller.time=540;
        else if (obj_controller.time&gt;540) obj_controller.time=60;
    }
}
else if(!selectionball)
{
    if (keyboard_check_pressed(global.p1right) or gamepad_button_check_pressed(0 , gp_padr))
    {
        audio_play_sound(menu_sound,0,0);
        global.skinball++;
        if (global.skinball&lt;1) global.skinball=global.ballcount;
        else if (global.skinball&gt;global.ballcount) global.skinball=1;
    }
    if (keyboard_check_pressed(global.p1left) or gamepad_button_check_pressed(0 , gp_padl))
    {
        audio_play_sound(menu_sound,0,0);
        global.skinball--;
        if (global.skinball&lt;1) global.skinball=global.ballcount;
        else if (global.skinball&gt;global.ballcount) global.skinball=1;
    }
}
else if(!selectionmap)
{
    if (keyboard_check_pressed(global.p1right) or gamepad_button_check_pressed(0 , gp_padr))
    {
        audio_play_sound(menu_sound,0,0);
        global.map++;
        if (global.map&lt;1) global.map=global.mapcount;
        else if (global.map&gt;global.mapcount) global.map=1;
    }
    if (keyboard_check_pressed(global.p1left) or gamepad_button_check_pressed(0 , gp_padl))
    {
        audio_play_sound(menu_sound,0,0);
        global.map--;
        if (global.map&lt;1) global.map=global.mapcount;
        else if (global.map&gt;global.mapcount) global.map=1;
    }
}
if (!selection2)
{
    if (keyboard_check_pressed(global.p2right) or gamepad_button_check_pressed(1 , gp_padr))
    {
        audio_play_sound(menu_sound,0,0);
        global.skin2++;
        if (global.skin2&lt;1) global.skin2=global.skincount;
        else if (global.skin2&gt;global.skincount) global.skin2=1;
    }
    if (keyboard_check_pressed(global.p2left) or gamepad_button_check_pressed(1 , gp_padl))
    {
        audio_play_sound(menu_sound,0,0);
        global.skin2--;
        if (global.skin2&lt;1) global.skin2=global.skincount;
        else if (global.skin2&gt;global.skincount) global.skin2=1;
    }
}



if (keyboard_check_pressed(global.p1throw) or gamepad_button_check_pressed(0 , gp_face2))
{
    if (selectionball) selectionmap=true;
    else if (selectiontime) selectionball=true;
    else if (selection1) selectiontime=true;
    if(!selection1)
    {
        skindisplay_1.selected = true;
        skindisplay_1.alarm[0]=room_speed/8;
    }
        
    selection1=true;
}

if (keyboard_check_pressed(global.p2throw) or gamepad_button_check_pressed(1 , gp_face2))
{
    if (selectionball) selectionmap=true;
    else if (selectiontime) selectionball=true;
    else if (selection2) selectiontime=true; 
    if(!selection2)
    {
        skindisplay_2.selected = true;
        skindisplay_2.alarm[0]=room_speed/8;
    }
       
    selection2=true;

}
if (selection1 and selection2 and selectionmap and selectionball and selectiontime)
{
    global.stage_curr="game";
    global.ball="play"; 
    obj_controller.alarm[1]=60;
    if (global.bot) instance_create(0,0,obj_state_machine);
    global.request_type="data";
    obj_controller.request[0]=gj_datastore_update_global("Matches started", "1", "add");
    
    
    switch (global.map)
    {
        default: room_goto(R_level_1); break;
        case 1: room_goto(R_level_1); break;
        case 2: room_goto(R_level_2); break;    
    }
    
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time=obj_controller.time;
draw_set_font(font_sb);
draw_set_halign(fa_center);
draw_text_colour(400,405,string(time div 60)+":"+string((time%60) div 10)+string((time%60)%10),c_white,c_white,c_white,c_white,1);
if (selectionball and selectiontime and (selection1 or selection2))
    draw_rectangle_colour(312,483,487,585,c_red,c_red,c_red,c_red,true);
else if (selectiontime and (selection1 or selection2))
    draw_rectangle_colour(312,449,487,478,c_red,c_red,c_red,c_red,true);
else if (selection1 or selection2)
    draw_rectangle_colour(325,407,474,443,c_red,c_red,c_red,c_red,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
