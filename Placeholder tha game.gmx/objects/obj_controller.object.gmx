<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>kosz();
global.rzutready=false;
global.rzutmoc=alarm[0];
global.rzutk=1;
//Punkty
global.points1=0;
global.points2=0;
global.throwing=false;
//Ball
global.ball="free";
global.ballx=obj_player.x;
global.bally=obj_player.y;
global.zbiorka=false;
Debug=false;
mapping=false;
//Keys
global.p1left=vk_left;
global.p1right=vk_right;
global.p1up=vk_up;
global.p1down=vk_down;
global.p1throw=vk_control;
global.p1jump=vk_space;
global.p1wybicie=vk_shift;
//P2
global.p2left=ord('A');
global.p2right=ord('D');
global.p2up=ord('W');
global.p2down=ord('S');
global.p2throw=vk_space;
global.p2jump=vk_space;
global.p2wybicie=ord('N');
ini_open("gejm.ini");
if (ini_section_exists("Controlls"))
{
    ini_write_string("Controlls","up","vk_up");  
}
ini_close();
sprajt=spr_ball;
global.widok=0;
shake=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Odmrozenie
physics_pause_enable(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shake=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.ball="wybicie";
instance_create(obj_ball_wybicie.x+10,obj_ball_wybicie.y+15,obj_ball);
//if (obj_stojak.have_ball) obj_stojak.have_ball=false;
if (obj_player.have_ball) {obj_player.have_ball=false; scr_balldrop(1);}
else if (obj_player_2.have_ball) {obj_player_2.have_ball=false;scr_balldrop(2);}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check(global.p1throw) or keyboard_check(global.p2throw))
{
alarm[0]=45;
show_debug_message("Alarm!");
if (global.rzutk==1) global.rzutk=0;
else global.rzutk =1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mapping=true and keyboard_check_released(vk_anykey))
{
    global.p1up=keyboard_lastkey;
    mapping=false;
}
if (obj_player.have_ball=true)
    {
       if (obj_player.obrot=0)
       {
       global.ballx=obj_player.x+27;
       global.bally=obj_player.y;  
       }
       else
       {
       global.ballx=obj_player.x-27;
       global.bally=obj_player.y;     
       }
    }
/*else if (obj_stojak.have_ball=true)
    {
    global.ballx=obj_stojak.x;
    global.bally=obj_stojak.y-15;
    }*/
else if (obj_player_2.have_ball=true)
    {
        if (obj_player_2.obrot=0)
       {
       global.ballx=obj_player_2.x+27;
       global.bally=obj_player_2.y;  
       }
       else
       {
       global.ballx=obj_player_2.x-27;
       global.bally=obj_player_2.y;     
       }
    }
if (obj_player.throwing=true or obj_player_2.throwing=true) global.throwing=true;
else global.throwing=false;
//SCREEENSHAKE BABYYY
if (shake) 
{
view_angle[0]+= random_range(-0.15, 0.15);
if (view_angle[0]&gt;0.8) view_angle[0]=0.8;
else if (view_angle[0]&lt;-0.8) view_angle[0]=-0.8;
}
else view_angle[0]=0;
        


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="58">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mapping=true;
keyboard_lastkey=-1;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.widok=view_current;
if (global.throwing)
{
    if (obj_player.have_ball=true)
        {
        if(global.rzutk==1)
            draw_healthbar(obj_player.x-8,obj_player.y-92,obj_player.x-5,obj_player.y-57,(45-alarm[0])/45*100,c_black,c_green,c_red,3,false,false);
        else if (global.rzutk==0)
            draw_healthbar(obj_player.x-8,obj_player.y-92,obj_player.x-5,obj_player.y-57,(alarm[0])/45*100,c_black,c_green,c_red,3,false,false);   
        draw_sprite(spr_bar,0,obj_player.x-12,obj_player.y-94);
        }
    else if (obj_player_2.have_ball=true)
        {
        if (global.rzutk==1)
            draw_healthbar(obj_player_2.x-8,obj_player_2.y-92,obj_player_2.x-5,obj_player_2.y-57,(45-alarm[0])/45*100,c_black,c_green,c_red,3,false,false);
        else if (global.rzutk==0)
            draw_healthbar(obj_player_2.x-8,obj_player_2.y-92,obj_player_2.x-5,obj_player_2.y-57,(alarm[0])/45*100,c_black,c_green,c_red,3,false,false);   
        draw_sprite(spr_bar,0,obj_player_2.x-12,obj_player_2.y-94);
        }
}
//Points
draw_text(view_xview[view_current],view_yview[view_current],global.points1);
draw_text(view_xview[view_current]+view_wview[view_current]-20,view_yview[view_current],global.points2);
//Debug
if (Debug)
    {
    draw_text(view_xview[view_current],view_yview[view_current]+12,"Prejump: "+ string(obj_player.prejump));
    draw_rectangle(obj_player.x-30,obj_player.y-30,obj_player.x+30,obj_player.y+70,true);//gracz
    draw_rectangle(obj_player.x-60,obj_player.y-5,obj_player.x-10,obj_player.y+20,true);//reka p1
    draw_rectangle(obj_player_2.x-50,obj_player_2.y-50,obj_player_2.x-10,obj_player_2.y,true);//reka p2
    draw_text(view_xview[view_current]+20,view_yview[view_current],"FPS: "+string(fps)+" RFPS: "+string(fps_real));
    draw_text(view_xview[view_current],view_yview[view_current]+24,"Jumping: "+string(obj_player.jumping));
    draw_text(view_xview[view_current],view_yview[view_current]+36,"Throwing: "+string(global.throwing));
    draw_text(view_xview[view_current],view_yview[view_current]+48,"Have_ball: "+string(obj_player.have_ball));
    draw_text(view_xview[view_current],view_yview[view_current]+60,"Lastkey: "+string(keyboard_lastkey));
    }
//Arrows
if (point_distance(view_xview[global.widok],0,obj_player.x,0)&gt;1 and point_distance(view_xview[global.widok]+1024,0,obj_player.x,0)&gt;1025 )
    {
    draw_sprite_ext(spr_arrow,0,view_xview[view_current]+50,view_yview[view_current]+470,1,1,90,c_white,0.75 );
    }
else if (point_distance(view_xview[global.widok]+1024,0,obj_player.x,0)&gt;1 and point_distance(view_xview[global.widok],0,obj_player.x,0)&gt;1025 )
    {
    draw_sprite_ext(spr_arrow,0,view_xview[view_current]+974,view_yview[view_current]+470,1,1,-90,c_white,0.75 );
    }
    
if (point_distance(view_xview[global.widok],0,obj_player_2.x,0)&gt;1 and point_distance(view_xview[global.widok]+1024,0,obj_player_2.x,0)&gt;1025 )
    {
    draw_sprite_ext(spr_arrow,0,view_xview[view_current]+50,view_yview[view_current]+420,1,1,90,c_blue,0.75 );
    }
else if (point_distance(view_xview[global.widok]+1024,0,obj_player_2.x,0)&gt;1 and point_distance(view_xview[global.widok],0,obj_player_2.x,0)&gt;1025 )
    {
    draw_sprite_ext(spr_arrow,0,view_xview[view_current]+974,view_yview[view_current]+420,1,1,-90,c_blue,0.75 );
    }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (Debug) Debug=false;
else Debug=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
